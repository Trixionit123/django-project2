services:
  db:
    image: postgres:16-alpine
    container_name: db
    restart: unless-stopped
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    container_name: zookeeper
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    volumes:
      - zk_data:/var/lib/zookeeper/data
      - zk_log:/var/lib/zookeeper/log

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    container_name: kafka
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_INTERNAL://0.0.0.0:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    volumes:
      - kafka_data:/var/lib/kafka/data

  web:
    build: .
    container_name: web
    restart: unless-stopped
    depends_on:
      - db
      - redis
      - kafka
    environment:
      DB_ENGINE: django.db.backends.postgresql
      DB_NAME: mydb
      DB_USER: myuser
      DB_PASSWORD: mypassword
      DB_HOST: db
      DB_PORT: 5432
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      KAFKA_BROKER_URL: kafka:29092
      KAFKA_ORDERS_TOPIC: orders
    ports:
      - "8000:8000"
    command: ["web"]
    volumes:
      - .:/app
      - outbox_data:/app/outbox

  worker:
    build: .
    container_name: worker
    restart: unless-stopped
    depends_on:
      - web
    environment:
      DB_ENGINE: django.db.backends.postgresql
      DB_NAME: mydb
      DB_USER: myuser
      DB_PASSWORD: mypassword
      DB_HOST: db
      DB_PORT: 5432
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      KAFKA_BROKER_URL: kafka:29092
      KAFKA_ORDERS_TOPIC: orders
    command: ["worker"]
    volumes:
      - .:/app
      - outbox_data:/app/outbox

  beat:
    build: .
    container_name: beat
    restart: unless-stopped
    depends_on:
      - web
    environment:
      DB_ENGINE: django.db.backends.postgresql
      DB_NAME: mydb
      DB_USER: myuser
      DB_PASSWORD: mypassword
      DB_HOST: db
      DB_PORT: 5432
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      KAFKA_BROKER_URL: kafka:29092
      KAFKA_ORDERS_TOPIC: orders
    command: ["beat"]
    volumes:
      - .:/app
      - outbox_data:/app/outbox

  kafdrop:
    image: obsidiandynamics/kafdrop:4.0.1
    container_name: kafdrop
    restart: unless-stopped
    depends_on:
      - kafka
    environment:
      KAFKA_BROKERCONNECT: kafka:29092
    ports:
      - "9000:9000"

volumes:
  db_data:
  kafka_data:
  zk_data:
  zk_log:
  outbox_data:
